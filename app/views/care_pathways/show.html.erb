<turbo-frame id="care-pathway-content">
  <div class="care-pathway-container">
    <div class="care-pathway-header">
      <div class="header-left">
        <% back_path = case session[:care_pathway_referrer]
                       when 'triage' then dashboard_triage_path
                       when 'rp' then dashboard_rp_path
                       when 'ed_rn' then dashboard_ed_rn_path
                       when 'provider' then dashboard_provider_path
                       when 'charge_rn' then dashboard_charge_rn_path
                       else dashboard_triage_path
                       end %>
        <%= link_to back_path, class: "back-button", data: { turbo: false } do %>
          ← Back to Dashboard
        <% end %>
        <h1>Care Pathway</h1>
      </div>
      <div class="patient-info">
        <% if @care_pathway.pathway_type_emergency_room? %>
          <% if @patient.rp_transfer_pending? %>
            <span class="rp-eligible-badge">RP Eligible</span>
          <% elsif (@patient.location_ed_room? || @patient.location_treatment?) && !@patient.location_results_pending? %>
            <%= button_to "Mark RP Eligible",
                          mark_rp_eligible_patient_care_pathway_path(@patient, @care_pathway),
                          method: :post,
                          class: "btn btn-secondary rp-eligible-trigger",
                          data: { turbo: false },
                          form: { class: "rp-eligible-form" } %>
          <% end %>
        <% end %>
        <span class="patient-details">
          <strong><%= @patient.full_name %></strong> • MRN: <%= @patient.mrn %> • <%= @patient.age %>Y
        </span>
      </div>
    </div>
    
    <div class="care-pathway-body">
      <% if @care_pathway.pathway_type_triage? %>
        <!-- Triage Pathway -->
        <div class="pathway-section">
          <% current_step = @care_pathway.current_triage_step %>
          <% if current_step && !@care_pathway.complete? %>
            <% # Use the patient's wait_time_minutes which returns the highest running timer
               time_waiting = @patient.wait_time_minutes
               # Determine timer color based on wait status
               timer_class = case @patient.wait_status
                            when :green then 'timer-green'
                            when :yellow then 'timer-yellow'
                            when :red then 'timer-red'
                            else ''
                            end
            %>
            <div class="current-task-banner <%= timer_class %>">
              <span class="current-task-label">CURRENT TASK:</span>
              <span class="current-task-name">
                <%= current_step.name == 'Intake' ? 'Triage Patient' : current_step.name %>
                <span class="task-timer"><%= time_waiting %>m</span>
              </span>
            </div>
          <% end %>

          <h2>Triage Pathway</h2>

          <div class="pathway-progress">
            <% @steps.each do |step| %>
              <div class="pathway-step <%= step.status_class %>" data-step-id="<%= step.id %>">
                <div class="step-icon">
                  <% if step.completed? %>
                    <span class="checkmark">✓</span>
                  <% elsif step.current? %>
                    <span class="current-indicator"></span>
                  <% else %>
                    <span class="pending-indicator"></span>
                  <% end %>
                </div>
                <div class="step-label"><%= step.name %></div>
                <% if step.completed_at %>
                  <div class="step-time"><%= step.completed_at.in_time_zone.strftime("%l:%M %p PST") %></div>
                <% end %>
              </div>
              <% unless step == @steps.last %>
                <div class="step-connector <%= 'completed' if step.completed? %>"></div>
              <% end %>
            <% end %>
          </div>
          
          <div class="progress-indicator">
            <div class="progress-bar">
              <div class="progress-fill" style="width: <%= @care_pathway.progress_percentage %>%"></div>
            </div>
            <h3><%= @care_pathway.progress_percentage %>% Complete</h3>
          </div>
          
          <% current_step = @care_pathway.current_triage_step %>
          <% if current_step %>
            <div class="current-step-content">
              <% if current_step.name == 'Intake' %>
                <%= render 'care_pathways/intake_assessment', patient: @patient, step: current_step %>
              <% elsif current_step.name == 'Bed Assignment' %>
                <%= render 'care_pathways/bed_assignment', patient: @patient, step: current_step %>
              <% else %>
                <div class="step-action-container">
                  <div class="step-header">
                    <h3><%= current_step.name %></h3>
                    <p class="step-description">Complete the patient <%= current_step.name.downcase %> process</p>
                  </div>
                  
                  <%= form_with url: complete_step_patient_care_pathway_path(@patient, @care_pathway, current_step),
                                method: :post,
                                local: true,
                                data: { turbo: false },
                                class: "step-action-form" do |f| %>
                    <div class="form-actions">
                      <%= submit_tag "Complete #{current_step.name}", class: "btn btn-primary btn-lg" %>
                    </div>
                  <% end %>
                </div>
              <% end %>
            </div>
          <% elsif @care_pathway.complete? %>
            <div class="pathway-complete">
              <h3>✓ Triage Complete</h3>
              <p>Patient is ready for transfer to <%= @patient.rp_eligible? ? 'Results Pending (RP)' : 'Emergency Department (ED)' %></p>
            </div>
          <% end %>
        </div>
        
      <% elsif @care_pathway.pathway_type_emergency_room? %>
        <!-- Emergency Room Pathway -->
        <div class="er-pathway-container">
          <% # Determine current task for ER pathway
             pending_orders = @orders.pending
             pending_procedures = @procedures.where(completed: false)
             pending_endpoints = @clinical_endpoints.where(achieved: false)

             current_task = nil
             # Use the patient's wait_time_minutes which returns the highest running timer
             task_timer = @patient.wait_time_minutes

             if pending_orders.any?
               oldest_order = pending_orders.min_by { |o| o.ordered_at || Time.current }
               current_task = "Advance #{oldest_order.name} (#{oldest_order.status.humanize})"
             elsif pending_procedures.any?
               proc = pending_procedures.first
               current_task = "Complete #{proc.name}"
             elsif pending_endpoints.any?
               endpoint = pending_endpoints.first
               current_task = "Achieve #{endpoint.name}"
             end
          %>
          <% if current_task %>
            <% # Determine timer color based on wait status
               timer_class = case @patient.wait_status
                            when :green then 'timer-green'
                            when :yellow then 'timer-yellow'
                            when :red then 'timer-red'
                            else ''
                            end
            %>
            <div class="current-task-banner <%= timer_class %>">
              <span class="current-task-label">CURRENT TASK:</span>
              <span class="current-task-name">
                <%= current_task %>
                <span class="task-timer"><%= task_timer %>m</span>
              </span>
            </div>
          <% end %>

          <div class="er-pathway-header">
            <div class="er-pathway-header-top">
              <h2>Emergency Room Care Pathway</h2>
            </div>

            <!-- Interactive Flowchart Journey moved here -->
          <div class="er-pathway-flowchart">
            <%
              # Calculate node states
              orders_complete = @orders.all? { |o| o.complete? }
              orders_in_progress = @orders.any? && !orders_complete
              orders_delayed = @orders.any? { |o| o.timer_status == 'yellow' && !o.complete? }
              orders_very_delayed = @orders.any? { |o| o.timer_status == 'red' && !o.complete? }

              procedures_complete = @procedures.all? { |p| p.completed? }
              procedures_in_progress = @procedures.any? && !procedures_complete && orders_complete
              procedures_delayed = false # Add logic if needed

              endpoints_complete = @clinical_endpoints.all? { |e| e.achieved? }
              endpoints_in_progress = @clinical_endpoints.any? && !endpoints_complete && procedures_complete && orders_complete
              endpoints_missing = @clinical_endpoints.count == 0

              discharge_ready = orders_complete && procedures_complete && endpoints_complete && !endpoints_missing

              # Determine node classes
              orders_class = if orders_very_delayed
                              'node-very-delayed'
                            elsif orders_delayed
                              'node-delayed'
                            elsif orders_complete
                              'node-complete'
                            elsif orders_in_progress
                              'node-in-progress'
                            else
                              'node-pending'
                            end

              procedures_class = if procedures_complete
                                  'node-complete'
                                elsif procedures_in_progress
                                  'node-in-progress'
                                else
                                  'node-pending'
                                end

              endpoints_class = if endpoints_missing
                                 'node-missing'
                               elsif endpoints_complete
                                 'node-complete'
                               elsif endpoints_in_progress
                                 'node-in-progress'
                               else
                                 'node-pending'
                               end

              discharge_class = discharge_ready ? 'node-complete' : 'node-pending'
            %>

            <div class="flowchart-container">
              <!-- Orders Node -->
              <div class="flowchart-node <%= orders_class %>" data-node="orders">
                <% if orders_complete %>
                  <span class="node-checkmark">✓</span>
                <% elsif orders_very_delayed %>
                  <span class="node-warning">⚠️</span>
                <% end %>
                <span class="node-title">Orders: <%= @orders.completed.count %>/<%= @orders.count %></span>
              </div>

              <!-- Arrow 1 -->
              <div class="flowchart-arrow-horizontal <%= orders_complete ? 'arrow-complete' : '' %>"></div>

              <!-- Procedures Node -->
              <div class="flowchart-node <%= procedures_class %>" data-node="procedures">
                <% if procedures_complete %>
                  <span class="node-checkmark">✓</span>
                <% end %>
                <span class="node-title">Procedures: <%= @procedures.completed.count %>/<%= @procedures.count %></span>
              </div>

              <!-- Arrow 2 -->
              <div class="flowchart-arrow-horizontal <%= procedures_complete ? 'arrow-complete' : '' %>"></div>

              <!-- Clinical Goals Node -->
              <div class="flowchart-node <%= endpoints_class %>" data-node="endpoints">
                <% if endpoints_missing %>
                  <div class="critical-warning-bubble">!</div>
                <% elsif endpoints_complete %>
                  <span class="node-checkmark">✓</span>
                <% end %>
                <span class="node-title">
                  Clinical Goals:
                  <% if endpoints_missing %>
                    <span class="warning-text">Missing</span>
                  <% else %>
                    <%= @clinical_endpoints.achieved.count %>/<%= @clinical_endpoints.count %>
                  <% end %>
                </span>
              </div>

              <!-- Arrow 3 -->
              <div class="flowchart-arrow-horizontal <%= endpoints_complete && !endpoints_missing ? 'arrow-complete' : '' %>"></div>

              <!-- Discharge Node -->
              <div class="flowchart-node <%= discharge_class %>" data-node="discharge">
                <% if discharge_ready %>
                  <span class="node-checkmark">✓</span>
                <% end %>
                <span class="node-title">Ready for Discharge</span>
              </div>
            </div>

            <% if endpoints_missing %>
              <div class="critical-alert">
                <span class="alert-icon">⚠️</span>
                <span class="alert-text">Define clinical endpoints to unlock discharge</span>
              </div>
            <% elsif discharge_ready %>
              <div class="discharge-ready-alert">
                <span class="success-icon">🎉</span>
                <span class="success-text">Patient is ready for discharge! All clinical requirements met.</span>
              </div>
            <% end %>
          </div>

          <div class="progress-bar-container">
            <div class="progress-bar">
              <div class="progress-fill" style="width: <%= @care_pathway.progress_percentage %>%"></div>
            </div>
            <span class="progress-text"><%= @care_pathway.progress_percentage %>% Complete</span>
          </div>
        </div>

        <div class="er-pathway-tabs">
            <button class="tab-button active" data-tab="all">All</button>
            <button class="tab-button" data-tab="orders">Orders</button>
            <button class="tab-button" data-tab="procedures">Procedures</button>
            <button class="tab-button" data-tab="endpoints">Clinical Endpoints</button>
          </div>
          
          <div class="er-pathway-content">
            <!-- All Tab -->
            <div class="tab-content active" id="all">
              <div class="section-header">
                <h4>All Items</h4>
                <div class="add-buttons-group">
                  <button class="btn btn-primary btn-add" onclick="showAddOrderModal(<%= @patient.id %>, <%= @care_pathway.id %>)">
                    + Add Order
                  </button>
                  <button class="btn btn-primary btn-add" onclick="showAddProcedureModal(<%= @patient.id %>, <%= @care_pathway.id %>)">
                    + Add Procedure
                  </button>
                  <button class="btn btn-primary btn-add" onclick="showAddEndpointModal(<%= @patient.id %>, <%= @care_pathway.id %>)">
                    + Add Goal
                  </button>
                </div>
              </div>

              <div class="all-items-list">
                <!-- Orders Section -->
                <% if @orders.any? %>
                  <div class="all-section">
                    <h5 class="all-section-title">Orders (<%= @orders.count %>)</h5>
                    <div class="orders-list">
                      <% @orders.each do |order| %>
                        <div class="order-item" data-order-id="<%= order.id %>">
                          <div class="order-icon"><%= order.type_icon %></div>
                          <div class="order-info">
                            <div class="order-name"><%= order.name %></div>
                            <div class="order-meta">
                              <span class="order-type"><%= order.order_type.humanize %></span>
                              <span class="order-time">Ordered by <%= order.ordered_by %> at <%= order.ordered_at&.in_time_zone&.strftime("%l:%M %p PST") %></span>
                            </div>
                          </div>
                          <div class="order-status-tracker">
                            <% workflow_states = order.workflow_states %>
                            <% current_workflow_index = workflow_states.index(order.status.to_sym) %>
                            <% next_workflow_index = if current_workflow_index && !order.complete?
                                                        potential_index = current_workflow_index + 1
                                                        workflow_states[potential_index] ? potential_index : nil
                                                      end %>
                            <% timer_start_time = order.status_updated_at || order.ordered_at %>

                            <% workflow_states.each_with_index do |workflow_status, index| %>
                              <% next unless order.class.statuses.key?(workflow_status.to_s) %>
                              <% step_classes = ['status-step'] %>
                              <% step_classes << 'completed' if current_workflow_index && index <= current_workflow_index %>
                              <% if next_workflow_index && index == next_workflow_index %>
                                <% step_classes << 'current' << "timer-#{order.timer_status}" %>
                              <% end %>

                              <div class="<%= step_classes.join(' ') %>">
                                <%= workflow_status.to_s.humanize %>
                                <% if next_workflow_index && index == next_workflow_index && !order.complete? %>
                                  <div class="timer-indicator timer-<%= order.timer_status %>">
                                    <span class="timer-value" data-start-time="<%= timer_start_time&.iso8601 %>" data-order-type="<%= order.order_type %>"></span>
                                  </div>
                                <% end %>
                              </div>
                              <% unless index == workflow_states.length - 1 %>
                                <div class="status-connector <%= 'completed' if current_workflow_index && index < current_workflow_index %>"></div>
                              <% end %>
                            <% end %>
                          </div>
                          <% unless order.complete? %>
                            <button class="btn btn-sm btn-advance"
                                    onclick="advanceOrderStatus(<%= @patient.id %>, <%= @care_pathway.id %>, <%= order.id %>)">
                              Advance →
                            </button>
                          <% end %>
                        </div>
                      <% end %>
                    </div>
                  </div>
                <% end %>

                <!-- Procedures Section -->
                <% if @procedures.any? %>
                  <div class="all-section">
                    <h5 class="all-section-title">Procedures (<%= @procedures.count %>)</h5>
                    <div class="procedures-list">
                      <% @procedures.each do |procedure| %>
                        <div class="procedure-item <%= procedure.status_class %>" data-procedure-id="<%= procedure.id %>">
                          <div class="procedure-icon">🔧</div>
                          <div class="procedure-info">
                            <div class="procedure-name"><%= procedure.name %></div>
                            <% if procedure.description.present? %>
                              <div class="procedure-description"><%= procedure.description %></div>
                            <% end %>
                            <% if procedure.completed? %>
                              <div class="procedure-meta">
                                Completed by <%= procedure.completed_by %> at <%= procedure.completed_at&.in_time_zone&.strftime("%l:%M %p PST") %>
                              </div>
                            <% end %>
                          </div>
                          <% unless procedure.completed? %>
                            <button class="btn btn-sm btn-complete"
                                    onclick="completeProcedure(<%= @patient.id %>, <%= @care_pathway.id %>, <%= procedure.id %>)">
                              Mark Complete
                            </button>
                          <% else %>
                            <span class="status-badge completed">✓ Complete</span>
                          <% end %>
                        </div>
                      <% end %>
                    </div>
                  </div>
                <% end %>

                <!-- Clinical Endpoints Section -->
                <% if @clinical_endpoints.any? %>
                  <div class="all-section">
                    <h5 class="all-section-title">Clinical Endpoints (<%= @clinical_endpoints.count %>)</h5>
                    <div class="endpoints-list">
                      <% @clinical_endpoints.each do |endpoint| %>
                        <div class="endpoint-item <%= endpoint.status_class %>" data-endpoint-id="<%= endpoint.id %>">
                          <div class="endpoint-icon">🎯</div>
                          <div class="endpoint-info">
                            <div class="endpoint-name"><%= endpoint.name %></div>
                            <div class="endpoint-description"><%= endpoint.description %></div>
                            <% if endpoint.achieved? %>
                              <div class="endpoint-meta">
                                Achieved by <%= endpoint.achieved_by %> at <%= endpoint.achieved_at&.in_time_zone&.strftime("%l:%M %p PST") %>
                              </div>
                            <% end %>
                          </div>
                          <% unless endpoint.achieved? %>
                            <button class="btn btn-sm btn-achieve"
                                    onclick="achieveEndpoint(<%= @patient.id %>, <%= @care_pathway.id %>, <%= endpoint.id %>)">
                              Mark Achieved
                            </button>
                          <% else %>
                            <span class="status-badge achieved">✓ Achieved</span>
                          <% end %>
                        </div>
                      <% end %>
                    </div>
                  </div>
                <% end %>

                <% if !@orders.any? && !@procedures.any? && !@clinical_endpoints.any? %>
                  <div class="empty-state">No items added yet. Add orders, procedures, or clinical endpoints to get started.</div>
                <% end %>
              </div>
            </div>

            <!-- Orders Tab -->
            <div class="tab-content" id="orders">
              <div class="section-header">
                <h4>Orders (Labs, Meds, Imaging)</h4>
                <button class="btn btn-primary btn-add" onclick="showAddOrderModal(<%= @patient.id %>, <%= @care_pathway.id %>)">
                  + Add Order
                </button>
              </div>
              
              <% if @orders.any? %>
                <div class="orders-list">
                  <% @orders.each do |order| %>
                    <div class="order-item" data-order-id="<%= order.id %>">
                      <div class="order-icon"><%= order.type_icon %></div>
                      <div class="order-info">
                        <div class="order-name"><%= order.name %></div>
                        <div class="order-meta">
                          <span class="order-type"><%= order.order_type.humanize %></span>
                          <span class="order-time">Ordered by <%= order.ordered_by %> at <%= order.ordered_at&.in_time_zone&.strftime("%l:%M %p PST") %></span>
                        </div>
                      </div>
                      <div class="order-status-tracker">
                        <% workflow_states = order.workflow_states %>
                        <% current_workflow_index = workflow_states.index(order.status.to_sym) %>
                        <% next_workflow_index = if current_workflow_index && !order.complete?
                                                    potential_index = current_workflow_index + 1
                                                    workflow_states[potential_index] ? potential_index : nil
                                                  end %>
                        <% timer_start_time = order.status_updated_at || order.ordered_at %>

                        <% workflow_states.each_with_index do |workflow_status, index| %>
                          <% next unless order.class.statuses.key?(workflow_status.to_s) %>
                          <% step_classes = ['status-step'] %>
                          <% step_classes << 'completed' if current_workflow_index && index <= current_workflow_index %>
                          <% if next_workflow_index && index == next_workflow_index %>
                            <% step_classes << 'current' << "timer-#{order.timer_status}" %>
                          <% end %>

                          <div class="<%= step_classes.join(' ') %>">
                            <%= workflow_status.to_s.humanize %>
                            <% if next_workflow_index && index == next_workflow_index && !order.complete? %>
                              <div class="timer-indicator timer-<%= order.timer_status %>">
                                <span class="timer-value" data-start-time="<%= timer_start_time&.iso8601 %>" data-order-type="<%= order.order_type %>"></span>
                              </div>
                            <% end %>
                          </div>
                          <% unless index == workflow_states.length - 1 %>
                            <div class="status-connector <%= 'completed' if current_workflow_index && index < current_workflow_index %>"></div>
                          <% end %>
                        <% end %>
                      </div>
                      <% unless order.complete? %>
                        <button class="btn btn-sm btn-advance" 
                                onclick="advanceOrderStatus(<%= @patient.id %>, <%= @care_pathway.id %>, <%= order.id %>)">
                          Advance →
                        </button>
                      <% end %>
                    </div>
                  <% end %>
                </div>
              <% else %>
                <div class="empty-state">No orders placed yet</div>
              <% end %>
            </div>
            
            <!-- Procedures Tab -->
            <div class="tab-content" id="procedures">
              <div class="section-header">
                <h4>Procedures</h4>
                <button class="btn btn-primary btn-add" onclick="showAddProcedureModal(<%= @patient.id %>, <%= @care_pathway.id %>)">
                  + Add Procedure
                </button>
              </div>
              
              <% if @procedures.any? %>
                <div class="procedures-list">
                  <% @procedures.each do |procedure| %>
                    <div class="procedure-item <%= procedure.status_class %>" data-procedure-id="<%= procedure.id %>">
                      <div class="procedure-icon">🔧</div>
                      <div class="procedure-info">
                        <div class="procedure-name"><%= procedure.name %></div>
                        <% if procedure.description.present? %>
                          <div class="procedure-description"><%= procedure.description %></div>
                        <% end %>
                        <% if procedure.completed? %>
                          <div class="procedure-meta">
                            Completed by <%= procedure.completed_by %> at <%= procedure.completed_at&.in_time_zone&.strftime("%l:%M %p PST") %>
                          </div>
                        <% end %>
                      </div>
                      <% unless procedure.completed? %>
                        <button class="btn btn-sm btn-complete" 
                                onclick="completeProcedure(<%= @patient.id %>, <%= @care_pathway.id %>, <%= procedure.id %>)">
                          Mark Complete
                        </button>
                      <% else %>
                        <span class="status-badge completed">✓ Complete</span>
                      <% end %>
                    </div>
                  <% end %>
                </div>
              <% else %>
                <div class="empty-state">No procedures added yet</div>
              <% end %>
            </div>
            
            <!-- Clinical Endpoints Tab -->
            <div class="tab-content" id="endpoints">
              <div class="section-header">
                <h4>Clinical Endpoints</h4>
                <button class="btn btn-primary btn-add" onclick="showAddEndpointModal(<%= @patient.id %>, <%= @care_pathway.id %>)">
                  + Add Goal
                </button>
              </div>
              
              <% if @clinical_endpoints.any? %>
                <div class="endpoints-list">
                  <% @clinical_endpoints.each do |endpoint| %>
                    <div class="endpoint-item <%= endpoint.status_class %>" data-endpoint-id="<%= endpoint.id %>">
                      <div class="endpoint-icon">🎯</div>
                      <div class="endpoint-info">
                        <div class="endpoint-name"><%= endpoint.name %></div>
                        <div class="endpoint-description"><%= endpoint.description %></div>
                        <% if endpoint.achieved? %>
                          <div class="endpoint-meta">
                            Achieved by <%= endpoint.achieved_by %> at <%= endpoint.achieved_at&.in_time_zone&.strftime("%l:%M %p PST") %>
                          </div>
                        <% end %>
                      </div>
                      <% unless endpoint.achieved? %>
                        <button class="btn btn-sm btn-achieve" 
                                onclick="achieveEndpoint(<%= @patient.id %>, <%= @care_pathway.id %>, <%= endpoint.id %>)">
                          Mark Achieved
                        </button>
                      <% else %>
                        <span class="status-badge achieved">✓ Achieved</span>
                      <% end %>
                    </div>
                  <% end %>
                </div>
              <% else %>
                <div class="empty-state">No clinical endpoints added yet</div>
              <% end %>
            </div>
          </div>
        </div>
        
        <%= render 'add_order_modal' %>
        <%= render 'add_procedure_modal' %>
        <%= render 'add_endpoint_modal' %>
      <% end %>
    </div>
  </div>
</turbo-frame>

<style>
  .care-pathway-container {
    background: white;
    min-height: 100vh;
  }

  .care-pathway-header {
    padding: 20px 30px;
    border-bottom: 1px solid #e1e4e8;
    display: flex;
    justify-content: space-between;
    align-items: center;
    background: white;
  }

  .header-left {
    display: flex;
    align-items: center;
    gap: 20px;
  }

  .back-button {
    padding: 8px 16px;
    background: #f6f8fa;
    border: 1px solid #d1d5da;
    border-radius: 6px;
    text-decoration: none;
    color: #24292e;
    font-weight: 500;
    transition: all 0.2s;
  }

  .back-button:hover {
    background: #e1e4e8;
    border-color: #c1c4cb;
  }

  .care-pathway-header h1 {
    margin: 0;
    font-size: 24px;
    font-weight: 600;
    color: #24292e;
  }

  .patient-info {
    font-size: 14px;
    color: #586069;
    display: flex;
    align-items: center;
    gap: 12px;
  }

  .patient-info .patient-details {
    white-space: nowrap;
  }

  .patient-info .rp-eligible-form {
    display: inline-flex;
    margin: 0;
  }

  .care-pathway-body {
    padding: 30px;
  }

  /* Current Task Banner - Default (red) */
  .current-task-banner {
    background: #ffebee;
    border: 2px solid #dc3545;
    border-radius: 8px;
    padding: 16px 20px;
    margin-bottom: 24px;
    display: flex;
    align-items: center;
    gap: 12px;
    font-size: 16px;
  }

  .current-task-label {
    color: #dc3545;
    font-weight: 700;
    font-size: 14px;
    letter-spacing: 0.5px;
  }

  .current-task-name {
    color: #721c24;
    font-weight: 600;
    flex: 1;
  }

  .task-timer {
    display: inline-block;
    margin-left: 12px;
    padding: 4px 8px;
    background: #dc3545;
    color: white;
    border-radius: 12px;
    font-size: 13px;
    font-weight: 600;
    min-width: 40px;
    text-align: center;
  }

  /* Green timer status */
  .current-task-banner.timer-green {
    background: #d4edda;
    border-color: #28a745;
  }

  .current-task-banner.timer-green .current-task-label {
    color: #28a745;
  }

  .current-task-banner.timer-green .current-task-name {
    color: #155724;
  }

  .current-task-banner.timer-green .task-timer {
    background: #28a745;
  }

  /* Yellow timer status */
  .current-task-banner.timer-yellow {
    background: #fef9c3;
    border-color: #facc15;
  }

  .current-task-banner.timer-yellow .current-task-label {
    color: #854d0e;
  }

  .current-task-banner.timer-yellow .current-task-name {
    color: #854d0e;
  }

  .current-task-banner.timer-yellow .task-timer {
    background: #facc15;
    color: #212529;
  }

  /* Red timer status */
  .current-task-banner.timer-red {
    background: #ffebee;
    border-color: #dc3545;
  }

  .current-task-banner.timer-red .current-task-label {
    color: #dc3545;
  }

  .current-task-banner.timer-red .current-task-name {
    color: #721c24;
  }

  .current-task-banner.timer-red .task-timer {
    background: #dc3545;
  }

  .pathway-section h2 {
    margin: 0 0 20px 0;
    font-size: 20px;
    font-weight: 600;
    color: #24292e;
  }

  .pathway-progress {
    display: flex;
    align-items: center;
    margin-bottom: 30px;
    padding: 20px;
    background: #f6f8fa;
    border-radius: 8px;
  }

  .pathway-step {
    display: flex;
    flex-direction: column;
    align-items: center;
    flex: 1;
  }

  .step-icon {
    width: 40px;
    height: 40px;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    margin-bottom: 8px;
    background: white;
    border: 2px solid #d1d5da;
  }

  .pathway-step.completed .step-icon {
    background: #28a745;
    border-color: #28a745;
    color: white;
  }

  .pathway-step.current .step-icon {
    background: #0366d6;
    border-color: #0366d6;
  }

  .current-indicator {
    width: 12px;
    height: 12px;
    background: white;
    border-radius: 50%;
  }

  .pending-indicator {
    width: 12px;
    height: 12px;
    background: #d1d5da;
    border-radius: 50%;
  }

  .step-connector {
    flex: 1;
    height: 2px;
    background: #d1d5da;
    margin: 0 10px;
    align-self: center;
    transform: translateY(-20px);
  }

  .step-connector.completed {
    background: #28a745;
  }

  .progress-indicator {
    margin-bottom: 30px;
  }

  .progress-bar {
    height: 8px;
    background: #e1e4e8;
    border-radius: 4px;
    overflow: hidden;
    margin-bottom: 10px;
  }

  .progress-fill {
    height: 100%;
    background: #0366d6;
    transition: width 0.3s ease;
  }

  .progress-indicator h3 {
    margin: 0;
    font-size: 16px;
    color: #586069;
  }

  .current-step-content {
    padding: 20px;
    background: #f6f8fa;
    border-radius: 8px;
  }

  .pathway-complete {
    padding: 30px;
    background: #d4edda;
    border: 1px solid #c3e6cb;
    border-radius: 8px;
    text-align: center;
  }

  .pathway-complete h3 {
    margin: 0 0 10px 0;
    color: #155724;
  }

  .pathway-complete p {
    margin: 0;
    color: #155724;
  }

  /* Emergency Room Pathway Styles */
  .er-pathway-container {
    max-width: 1200px;
    margin: 0 auto;
  }

  .er-pathway-header h2 {
    margin: 0 0 10px 0;
    font-size: 24px;
    font-weight: 600;
  }

  .pathway-subtitle {
    margin: 0 0 20px 0;
    color: #586069;
  }

  .progress-bar-container {
    margin-bottom: 30px;
  }

  .progress-text {
    display: block;
    margin-top: 8px;
    font-size: 14px;
    color: #586069;
  }

  .er-pathway-tabs {
    display: flex;
    gap: 10px;
    margin-bottom: 30px;
    border-bottom: 2px solid #e1e4e8;
  }

  .tab-button {
    padding: 10px 20px;
    background: none;
    border: none;
    font-size: 14px;
    font-weight: 500;
    color: #586069;
    cursor: pointer;
    position: relative;
    transition: color 0.2s;
  }

  .tab-button:hover {
    color: #24292e;
  }

  .tab-button.active {
    color: #0366d6;
  }

  .tab-button.active::after {
    content: '';
    position: absolute;
    bottom: -2px;
    left: 0;
    right: 0;
    height: 2px;
    background: #0366d6;
  }

  .tab-content {
    display: none;
  }

  .tab-content.active {
    display: block;
  }

  .section-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 20px;
  }

  .section-header h4 {
    margin: 0;
    font-size: 18px;
    font-weight: 600;
    color: #24292e;
  }

  .btn {
    padding: 8px 16px;
    border: 1px solid #d1d5da;
    border-radius: 6px;
    font-size: 14px;
    font-weight: 500;
    cursor: pointer;
    transition: all 0.2s;
    text-decoration: none;
    display: inline-block;
  }

  .btn-primary {
    background: #0366d6;
    border-color: #0366d6;
    color: white;
  }

  .btn-primary:hover {
    background: #0256c7;
    border-color: #0256c7;
  }

  .btn-sm {
    padding: 4px 8px;
    font-size: 12px;
  }

  .orders-list,
  .procedures-list,
  .endpoints-list {
    display: flex;
    flex-direction: column;
    gap: 15px;
  }

  .order-item,
  .procedure-item,
  .endpoint-item {
    display: flex;
    align-items: center;
    gap: 15px;
    padding: 15px;
    background: #f6f8fa;
    border-radius: 8px;
    border: 1px solid #e1e4e8;
  }

  .order-icon,
  .procedure-icon,
  .endpoint-icon {
    font-size: 24px;
  }

  .order-info,
  .procedure-info,
  .endpoint-info {
    flex: 1;
  }

  .order-name,
  .procedure-name,
  .endpoint-name {
    font-weight: 600;
    margin-bottom: 4px;
  }

  .order-meta,
  .procedure-meta,
  .endpoint-meta {
    font-size: 12px;
    color: #586069;
  }

  .order-type {
    display: inline-block;
    padding: 2px 6px;
    background: white;
    border-radius: 3px;
    margin-right: 10px;
  }

  .order-status-tracker {
    display: flex;
    align-items: center;
    gap: 5px;
  }

  .status-step {
    padding: 4px 8px;
    font-size: 11px;
    background: white;
    border-radius: 3px;
    color: #586069;
  }

  .status-step.completed {
    background: #28a745;
    color: white;
  }

  .status-connector {
    width: 20px;
    height: 2px;
    background: #d1d5da;
  }

  .status-connector.completed {
    background: #28a745;
  }

  .status-badge {
    padding: 4px 8px;
    font-size: 12px;
    border-radius: 4px;
  }

  .status-badge.completed,
  .status-badge.achieved {
    background: #d4edda;
    color: #155724;
    border: 1px solid #c3e6cb;
  }

  .empty-state {
    padding: 40px;
    text-align: center;
    color: #586069;
    background: #f6f8fa;
    border-radius: 8px;
  }

  /* Step Action Container Styles */
  .step-action-container {
    max-width: 800px;
    margin: 0 auto;
  }

  .step-header {
    margin-bottom: 30px;
  }

  .step-header h3 {
    margin: 0 0 10px 0;
    font-size: 24px;
    font-weight: 600;
    color: #24292e;
  }

  .step-description {
    margin: 0;
    font-size: 16px;
    color: #586069;
  }

  .step-action-form {
    margin-top: 30px;
  }

  /* Bed Assignment Styles */
  .destination-section {
    margin-bottom: 30px;
  }

  .destination-options {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: 20px;
    margin-bottom: 20px;
  }

  .destination-option {
    position: relative;
    display: block;
    cursor: pointer;
  }

  .destination-radio {
    position: absolute;
    opacity: 0;
  }

  .option-card {
    padding: 20px;
    background: white;
    border: 2px solid #e1e4e8;
    border-radius: 8px;
    transition: all 0.2s;
  }

  .destination-option:hover .option-card {
    border-color: #0366d6;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
  }

  .destination-radio:checked + .option-card {
    border-color: #0366d6;
    background: #f0f8ff;
  }

  .option-header {
    display: flex;
    align-items: center;
    gap: 12px;
    margin-bottom: 10px;
  }

  .option-icon {
    font-size: 24px;
  }

  .option-title {
    font-size: 18px;
    font-weight: 600;
    color: #24292e;
  }

  .option-description {
    margin: 0;
    font-size: 14px;
    color: #586069;
    line-height: 1.5;
  }

  .status-notice {
    display: flex;
    align-items: center;
    gap: 10px;
    padding: 12px 16px;
    border-radius: 6px;
    margin-bottom: 20px;
  }

  .status-notice.success {
    background: #d4edda;
    border: 1px solid #c3e6cb;
    color: #155724;
  }

  .status-notice.warning {
    background: #fef9c3;
    border: 1px solid #fef08a;
    color: #854d0e;
  }

  .status-notice.info {
    background: #d1ecf1;
    border: 1px solid #bee5eb;
    color: #0c5460;
  }

  .notice-icon {
    font-size: 18px;
  }

  .notice-text {
    font-size: 14px;
    font-weight: 500;
  }

  .form-actions {
    display: flex;
    justify-content: center;
    padding-top: 20px;
  }

  .btn-lg {
    padding: 12px 32px;
    font-size: 16px;
    font-weight: 600;
  }
  
  /* Modal Styles */
  .modal {
    position: fixed;
    z-index: 1000;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.5);
    display: flex;
    align-items: center;
    justify-content: center;
  }
  
  .modal-content {
    background-color: white;
    width: 90%;
    max-width: 500px;
    border-radius: 8px;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
  }
  
  .modal-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 20px;
    border-bottom: 1px solid #e1e4e8;
  }
  
  .modal-header h3 {
    margin: 0;
    font-size: 20px;
    font-weight: 600;
  }
  
  .modal-close {
    background: none;
    border: none;
    font-size: 24px;
    cursor: pointer;
    color: #586069;
    padding: 0;
    width: 30px;
    height: 30px;
    display: flex;
    align-items: center;
    justify-content: center;
  }
  
  .modal-close:hover {
    color: #24292e;
  }
  
  .modal-body {
    padding: 20px;
  }
  
  .form-group {
    margin-bottom: 20px;
  }
  
  .form-group label {
    display: block;
    margin-bottom: 8px;
    font-weight: 500;
    color: #24292e;
  }
  
  .form-control {
    width: 100%;
    padding: 8px 12px;
    border: 1px solid #d1d5da;
    border-radius: 6px;
    font-size: 14px;
  }
  
  .form-control:focus {
    outline: none;
    border-color: #0366d6;
    box-shadow: 0 0 0 3px rgba(3, 102, 214, 0.1);
  }
  
  .modal-footer {
    display: flex;
    justify-content: flex-end;
    gap: 10px;
    padding: 20px;
    border-top: 1px solid #e1e4e8;
  }
  
  .btn-secondary {
    background: #f6f8fa;
    color: #24292e;
    border-color: #d1d5da;
  }
  
  .btn-secondary:hover {
    background: #e1e4e8;
    border-color: #c1c4cb;
  }
  
  /* All Tab Styles */
  .add-buttons-group {
    display: flex;
    gap: 10px;
  }

  .all-items-list {
    display: flex;
    flex-direction: column;
    gap: 30px;
  }

  .all-section {
    border-top: 2px solid #e1e4e8;
    padding-top: 20px;
  }

  .all-section:first-child {
    border-top: none;
    padding-top: 0;
  }

  .all-section-title {
    margin: 0 0 15px 0;
    font-size: 16px;
    font-weight: 600;
    color: #24292e;
  }

  /* Timer Styles */
  .timer-indicator {
    position: absolute;
    top: -8px;
    right: -8px;
    font-size: 10px;
    padding: 2px 4px;
    border-radius: 3px;
    font-weight: 600;
  }
  
  .timer-green {
    background: #d4edda;
    color: #155724;
  }
  
  .timer-yellow {
    background: #fef9c3;
    color: #854d0e;
  }
  
  .timer-red {
    background: #f8d7da;
    color: #721c24;
    animation: pulse 1s infinite;
  }
  
  @keyframes pulse {
    0% { opacity: 1; }
    50% { opacity: 0.7; }
    100% { opacity: 1; }
  }

  .status-step {
    position: relative;
  }

  .status-step.timer-yellow {
    border: 2px solid #facc15;
  }

  .status-step.timer-red {
    border: 2px solid #dc3545;
  }

  /* Interactive Flowchart Journey Styles */
  .er-pathway-flowchart {
    margin: 20px 0;
    padding: 25px 15px;
    background: linear-gradient(135deg, #f8f9fa 0%, #ffffff 100%);
    border-radius: 12px;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
  }

  .flowchart-container {
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: center;
    gap: 10px;
    margin-bottom: 20px;
    overflow-x: auto;
    padding: 10px 0;
  }

  .flowchart-node {
    flex: 0 0 auto;
    width: 180px;
    min-width: 150px;
    padding: 15px 12px;
    border-radius: 10px;
    display: flex;
    align-items: center;
    justify-content: center;
    position: relative;
    cursor: pointer;
    transition: all 0.3s ease;
    font-weight: 600;
    font-size: 14px;
    text-align: center;
    border: 2px solid transparent;
  }

  .flowchart-node:hover {
    transform: scale(1.02);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
  }

  /* Node States */
  .node-pending {
    background: linear-gradient(135deg, #e9ecef 0%, #dee2e6 100%);
    color: #6c757d;
    border-color: #ced4da;
  }

  .node-complete {
    background: linear-gradient(135deg, #22c55e 0%, #16a34a 100%);
    color: white;
    border-color: #16a34a;
  }

  .node-in-progress {
    background: linear-gradient(135deg, #3b82f6 0%, #2563eb 100%);
    color: white;
    border-color: #2563eb;
    animation: node-pulse 2s ease-in-out infinite;
  }

  @keyframes node-pulse {
    0%, 100% { transform: scale(1); }
    50% { transform: scale(1.05); }
  }

  .node-delayed {
    background: linear-gradient(135deg, #fde047 0%, #facc15 100%);
    color: #000;
    border-color: #facc15;
  }

  .node-very-delayed,
  .node-missing {
    background: linear-gradient(135deg, #ef4444 0%, #dc2626 100%);
    color: white;
    border-color: #dc2626;
    animation: node-flash 1s ease-in-out infinite;
  }

  @keyframes node-flash {
    0%, 100% { opacity: 1; }
    50% { opacity: 0.7; }
  }

  /* Node Content */
  .node-checkmark {
    margin-right: 10px;
    font-size: 20px;
  }

  .node-warning {
    margin-right: 10px;
    font-size: 20px;
  }

  .node-title {
    flex: 1;
  }

  .warning-text {
    color: #facc15;
    font-weight: 700;
  }

  /* Critical Warning Bubble */
  .critical-warning-bubble {
    position: absolute;
    top: -10px;
    right: -10px;
    width: 30px;
    height: 30px;
    background: #ef4444;
    color: white;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    font-weight: bold;
    font-size: 18px;
    border: 2px solid white;
    box-shadow: 0 2px 8px rgba(239, 68, 68, 0.4);
    animation: bounce 1s ease-in-out infinite;
  }

  @keyframes bounce {
    0%, 100% { transform: translateY(0); }
    50% { transform: translateY(-5px); }
  }

  /* Horizontal Flowchart Arrows */
  .flowchart-arrow-horizontal {
    width: 0;
    height: 0;
    border-top: 15px solid transparent;
    border-bottom: 15px solid transparent;
    border-left: 20px solid #e5e7eb;
    transition: border-color 0.3s ease;
    flex-shrink: 0;
  }

  .flowchart-arrow-horizontal.arrow-complete {
    border-left-color: #22c55e;
  }

  /* Critical Alert Box */
  .critical-alert {
    background: #fef2f2;
    border: 2px solid #ef4444;
    border-radius: 8px;
    padding: 15px 20px;
    display: flex;
    align-items: center;
    gap: 12px;
    margin-top: 20px;
  }

  .alert-icon {
    font-size: 20px;
    flex-shrink: 0;
  }

  .alert-text {
    font-weight: 700;
    color: #ef4444;
    font-size: 16px;
  }

  /* Discharge Ready Alert */
  .discharge-ready-alert {
    background: linear-gradient(135deg, #d4edda 0%, #c3e6cb 100%);
    border: 2px solid #28a745;
    border-radius: 8px;
    padding: 15px 20px;
    display: flex;
    align-items: center;
    gap: 12px;
    margin-top: 20px;
    animation: glow 2s ease-in-out infinite;
  }

  @keyframes glow {
    0%, 100% { box-shadow: 0 0 10px rgba(40, 167, 69, 0.3); }
    50% { box-shadow: 0 0 20px rgba(40, 167, 69, 0.6); }
  }

  .success-icon {
    font-size: 24px;
    flex-shrink: 0;
    animation: celebrate 1s ease-in-out infinite;
  }

  @keyframes celebrate {
    0%, 100% { transform: rotate(0deg) scale(1); }
    25% { transform: rotate(-10deg) scale(1.1); }
    75% { transform: rotate(10deg) scale(1.1); }
  }

  .success-text {
    font-weight: 700;
    color: #155724;
    font-size: 16px;
  }

  /* Responsive Adjustments */
  @media (max-width: 768px) {
    .flowchart-container {
      justify-content: flex-start;
      padding: 10px;
    }

    .flowchart-node {
      width: 140px;
      min-width: 120px;
      font-size: 12px;
      padding: 10px 8px;
    }

    .flowchart-arrow-horizontal {
      border-left-width: 15px;
      border-top-width: 12px;
      border-bottom-width: 12px;
    }

    .critical-warning-bubble {
      width: 25px;
      height: 25px;
      font-size: 16px;
      top: -8px;
      right: -8px;
    }

    .alert-text {
      font-size: 14px;
    }

    .node-checkmark,
    .node-warning {
      font-size: 16px;
      margin-right: 6px;
    }
  }

  @media (max-width: 480px) {
    .flowchart-node {
      width: 110px;
      min-width: 100px;
      font-size: 11px;
      padding: 8px 6px;
    }
  }
</style>

<!-- Confetti library -->
<script src="https://cdn.jsdelivr.net/npm/canvas-confetti@1.9.2/dist/confetti.browser.min.js"></script>

<script>
  // Tab switching functionality
  document.addEventListener('DOMContentLoaded', () => {
    const tabButtons = document.querySelectorAll('.tab-button');
    const tabContents = document.querySelectorAll('.tab-content');

    // Check for discharge readiness and fire confetti for ER pathway
    const erPathwayContainer = document.querySelector('.er-pathway-container');
    if (erPathwayContainer) {
      const dischargeNode = document.querySelector('[data-node="discharge"].node-complete');
      if (dischargeNode && !window.erConfettiFired) {
        window.erConfettiFired = true; // Prevent multiple firings

        // Fire confetti 5 times with delays for extra celebration
        setTimeout(() => {
          // First burst
          confetti({
            particleCount: 150,
            spread: 100,
            origin: { y: 0.6 },
            colors: ['#22c55e', '#16a34a', '#ffd700', '#3b82f6', '#ef4444']
          });

          // Second burst (left side)
          setTimeout(() => {
            confetti({
              particleCount: 100,
              angle: 60,
              spread: 80,
              origin: { x: 0, y: 0.7 },
              colors: ['#22c55e', '#16a34a', '#ffd700', '#3b82f6', '#ef4444']
            });
          }, 200);

          // Third burst (right side)
          setTimeout(() => {
            confetti({
              particleCount: 100,
              angle: 120,
              spread: 80,
              origin: { x: 1, y: 0.7 },
              colors: ['#22c55e', '#16a34a', '#ffd700', '#3b82f6', '#ef4444']
            });
          }, 400);

          // Fourth burst (center top)
          setTimeout(() => {
            confetti({
              particleCount: 120,
              spread: 90,
              origin: { y: 0.4 },
              colors: ['#22c55e', '#16a34a', '#ffd700', '#3b82f6', '#ef4444']
            });
          }, 600);

          // Fifth burst (grand finale)
          setTimeout(() => {
            confetti({
              particleCount: 200,
              spread: 120,
              origin: { y: 0.9 },
              colors: ['#22c55e', '#16a34a', '#ffd700', '#3b82f6', '#ef4444'],
              startVelocity: 45,
              gravity: 0.8
            });
          }, 800);
        }, 300); // Small initial delay
      }
    }
    
    // Function to activate a tab
    function activateTab(tabId) {
      // Remove active class from all buttons and contents
      tabButtons.forEach(btn => btn.classList.remove('active'));
      tabContents.forEach(content => content.classList.remove('active'));
      
      // Find and activate the button and content for the specified tab
      const targetButton = document.querySelector(`.tab-button[data-tab="${tabId}"]`);
      const targetContent = document.getElementById(tabId);
      
      if (targetButton && targetContent) {
        targetButton.classList.add('active');
        targetContent.classList.add('active');
      }
    }
    
    // Check URL parameters for active tab
    const urlParams = new URLSearchParams(window.location.search);
    const activeTab = urlParams.get('active_tab');
    if (activeTab) {
      activateTab(activeTab);
    } else {
      // Default to "all" tab if no tab is specified and ER pathway is active
      const erPathway = document.querySelector('.er-pathway-container');
      if (erPathway) {
        activateTab('all');
      }
    }
    
    // Add click handlers for tab buttons
    tabButtons.forEach(button => {
      button.addEventListener('click', () => {
        const tabId = button.dataset.tab;
        activateTab(tabId);
        
        // Update URL without reloading page
        const url = new URL(window.location);
        url.searchParams.set('active_tab', tabId);
        window.history.replaceState({}, '', url);
      });
    });

    // Add confetti effect when triage is complete (only once)
    const pathwayComplete = document.querySelector('.pathway-complete');
    if (pathwayComplete && !window.confettiFired) {
      window.confettiFired = true; // Prevent multiple firings
      // Trigger confetti immediately when the complete message is shown
      setTimeout(() => {
        confetti({
          particleCount: 100,
          spread: 70,
          origin: { y: 0.9 },
          colors: ['#0366d6', '#28a745', '#ffd700', '#ff6347', '#00ced1']
        });
      }, 200); // Small delay to ensure page is fully rendered
    }
  });

  // Helper functions for actions
  function advanceOrderStatus(patientId, pathwayId, orderId) {
    // Create a form to submit with Turbo
    const form = document.createElement('form');
    form.method = 'POST';
    form.action = `/patients/${patientId}/care_pathways/${pathwayId}/update_order_status/${orderId}`;
    form.style.display = 'none';
    
    const csrfToken = document.querySelector('[name="csrf-token"]').content;
    const csrfInput = document.createElement('input');
    csrfInput.type = 'hidden';
    csrfInput.name = 'authenticity_token';
    csrfInput.value = csrfToken;
    form.appendChild(csrfInput);
    
    document.body.appendChild(form);
    form.requestSubmit();
  }

  function completeProcedure(patientId, pathwayId, procedureId) {
    // Create a form to submit with Turbo
    const form = document.createElement('form');
    form.method = 'POST';
    form.action = `/patients/${patientId}/care_pathways/${pathwayId}/complete_procedure/${procedureId}`;
    form.style.display = 'none';
    
    const csrfToken = document.querySelector('[name="csrf-token"]').content;
    const csrfInput = document.createElement('input');
    csrfInput.type = 'hidden';
    csrfInput.name = 'authenticity_token';
    csrfInput.value = csrfToken;
    form.appendChild(csrfInput);
    
    document.body.appendChild(form);
    form.requestSubmit();
  }

  function achieveEndpoint(patientId, pathwayId, endpointId) {
    // Create a form to submit with Turbo
    const form = document.createElement('form');
    form.method = 'POST';
    form.action = `/patients/${patientId}/care_pathways/${pathwayId}/achieve_endpoint/${endpointId}`;
    form.style.display = 'none';
    
    const csrfToken = document.querySelector('[name="csrf-token"]').content;
    const csrfInput = document.createElement('input');
    csrfInput.type = 'hidden';
    csrfInput.name = 'authenticity_token';
    csrfInput.value = csrfToken;
    form.appendChild(csrfInput);
    
    document.body.appendChild(form);
    form.requestSubmit();
  }

  // Update timers
  function updateTimers() {
    document.querySelectorAll('.timer-value').forEach(timer => {
      const startTime = timer.dataset.startTime;
      const orderType = timer.dataset.orderType;
      if (!startTime) return;

      const start = new Date(startTime);
      const now = new Date();
      const diffMinutes = Math.floor((now - start) / 60000);

      timer.textContent = diffMinutes + 'm';

      const indicator = timer.parentElement;
      const statusStep = indicator.closest('.status-step');
      const timerClasses = ['timer-green', 'timer-yellow', 'timer-red'];

      indicator.classList.remove(...timerClasses);
      if (statusStep) statusStep.classList.remove(...timerClasses);

      const applyTimerClass = cssClass => {
        indicator.classList.add(cssClass);
        if (statusStep) statusStep.classList.add(cssClass);
      };

      // Different timing for medications
      if (orderType === 'medication') {
        if (diffMinutes <= 5) {
          applyTimerClass('timer-green');
        } else if (diffMinutes <= 10) {
          applyTimerClass('timer-yellow');
        } else {
          applyTimerClass('timer-red');
        }
      } else {
        // Standard timing for labs and imaging
        if (diffMinutes <= 20) {
          applyTimerClass('timer-green');
        } else if (diffMinutes <= 40) {
          applyTimerClass('timer-yellow');
        } else {
          applyTimerClass('timer-red');
        }
      }
    });
  }
  
  // Update timers every 10 seconds with cleanup
  let timerInterval = setInterval(updateTimers, 10000);
  updateTimers(); // Initial call
  
  // Clean up interval on page unload
  window.addEventListener('beforeunload', () => {
    if (timerInterval) {
      clearInterval(timerInterval);
    }
  });
  
  // Also clean up on Turbo navigation
  document.addEventListener('turbo:before-cache', () => {
    if (timerInterval) {
      clearInterval(timerInterval);
      timerInterval = null;
    }
  });
</script>
